// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: admin_auth.sql

package db

import (
	"context"
)

const createAdminUser = `-- name: CreateAdminUser :one
INSERT INTO admin_users (
    username, password
) VALUES (
    $1, $2
) RETURNING id, username, password
`

type CreateAdminUserParams struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

func (q *Queries) CreateAdminUser(ctx context.Context, arg CreateAdminUserParams) (AdminUser, error) {
	row := q.db.QueryRowContext(ctx, createAdminUser, arg.Username, arg.Password)
	var i AdminUser
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}

const getAdminUserByUsername = `-- name: GetAdminUserByUsername :one
SELECT id, username, password FROM admin_users
WHERE username = $1 LIMIT 1
`

func (q *Queries) GetAdminUserByUsername(ctx context.Context, username string) (AdminUser, error) {
	row := q.db.QueryRowContext(ctx, getAdminUserByUsername, username)
	var i AdminUser
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}
